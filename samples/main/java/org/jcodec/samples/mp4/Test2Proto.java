// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto2.proto

package org.jcodec.samples.mp4;

public final class Test2Proto {
  private Test2Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TagOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jcodec.samples.mp4.Tag)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The category of the audio recording, such as speech, music, etc.
     * This is required since v1.
     * </pre>
     *
     * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <pre>
     * The category of the audio recording, such as speech, music, etc.
     * This is required since v1.
     * </pre>
     *
     * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
     * @return The category.
     */
    org.jcodec.samples.mp4.Test2Proto.Tag.Category getCategory();

    /**
     * <pre>
     * The onset of the audio tag in the audio recording.
     * This is required since v1.
     * </pre>
     *
     * <code>optional int64 onset_milli = 2;</code>
     * @return Whether the onsetMilli field is set.
     */
    boolean hasOnsetMilli();
    /**
     * <pre>
     * The onset of the audio tag in the audio recording.
     * This is required since v1.
     * </pre>
     *
     * <code>optional int64 onset_milli = 2;</code>
     * @return The onsetMilli.
     */
    long getOnsetMilli();

    /**
     * <pre>
     * The score for the accuracy of the audio tag.
     * This is required since v1.
     * </pre>
     *
     * <code>optional double score = 3;</code>
     * @return Whether the score field is set.
     */
    boolean hasScore();
    /**
     * <pre>
     * The score for the accuracy of the audio tag.
     * This is required since v1.
     * </pre>
     *
     * <code>optional double score = 3;</code>
     * @return The score.
     */
    double getScore();
  }
  /**
   * Protobuf type {@code org.jcodec.samples.mp4.Tag}
   */
  public  static final class Tag extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.jcodec.samples.mp4.Tag)
      TagOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Tag.newBuilder() to construct.
    private Tag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Tag() {
      category_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Tag();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Tag(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              org.jcodec.samples.mp4.Test2Proto.Tag.Category value = org.jcodec.samples.mp4.Test2Proto.Tag.Category.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                category_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              onsetMilli_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              score_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jcodec.samples.mp4.Test2Proto.internal_static_org_jcodec_samples_mp4_Tag_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jcodec.samples.mp4.Test2Proto.internal_static_org_jcodec_samples_mp4_Tag_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jcodec.samples.mp4.Test2Proto.Tag.class, org.jcodec.samples.mp4.Test2Proto.Tag.Builder.class);
    }

    /**
     * Protobuf enum {@code org.jcodec.samples.mp4.Tag.Category}
     */
    public enum Category
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Default category for when the extractor cannot identify any particular
       * sound.
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>SPEECH = 1;</code>
       */
      SPEECH(1),
      /**
       * <code>MUSIC = 2;</code>
       */
      MUSIC(2),
      /**
       * <code>WHISTLING = 3;</code>
       */
      WHISTLING(3),
      /**
       * <code>APPLAUSE = 4;</code>
       */
      APPLAUSE(4),
      /**
       * <code>KNOCK = 5;</code>
       */
      KNOCK(5),
      /**
       * <code>BIRD = 6;</code>
       */
      BIRD(6),
      /**
       * <code>CAT = 7;</code>
       */
      CAT(7),
      /**
       * <code>DOG = 8;</code>
       */
      DOG(8),
      /**
       * <code>ROOSTER = 9;</code>
       */
      ROOSTER(9),
      /**
       * <code>LAUGHTER = 10;</code>
       */
      LAUGHTER(10),
      /**
       * <code>TELEPHONE = 11;</code>
       */
      TELEPHONE(11),
      /**
       * <code>DIDGERIDOO = 12;</code>
       */
      DIDGERIDOO(12),
      ;

      /**
       * <pre>
       * Default category for when the extractor cannot identify any particular
       * sound.
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>SPEECH = 1;</code>
       */
      public static final int SPEECH_VALUE = 1;
      /**
       * <code>MUSIC = 2;</code>
       */
      public static final int MUSIC_VALUE = 2;
      /**
       * <code>WHISTLING = 3;</code>
       */
      public static final int WHISTLING_VALUE = 3;
      /**
       * <code>APPLAUSE = 4;</code>
       */
      public static final int APPLAUSE_VALUE = 4;
      /**
       * <code>KNOCK = 5;</code>
       */
      public static final int KNOCK_VALUE = 5;
      /**
       * <code>BIRD = 6;</code>
       */
      public static final int BIRD_VALUE = 6;
      /**
       * <code>CAT = 7;</code>
       */
      public static final int CAT_VALUE = 7;
      /**
       * <code>DOG = 8;</code>
       */
      public static final int DOG_VALUE = 8;
      /**
       * <code>ROOSTER = 9;</code>
       */
      public static final int ROOSTER_VALUE = 9;
      /**
       * <code>LAUGHTER = 10;</code>
       */
      public static final int LAUGHTER_VALUE = 10;
      /**
       * <code>TELEPHONE = 11;</code>
       */
      public static final int TELEPHONE_VALUE = 11;
      /**
       * <code>DIDGERIDOO = 12;</code>
       */
      public static final int DIDGERIDOO_VALUE = 12;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Category valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Category forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return SPEECH;
          case 2: return MUSIC;
          case 3: return WHISTLING;
          case 4: return APPLAUSE;
          case 5: return KNOCK;
          case 6: return BIRD;
          case 7: return CAT;
          case 8: return DOG;
          case 9: return ROOSTER;
          case 10: return LAUGHTER;
          case 11: return TELEPHONE;
          case 12: return DIDGERIDOO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Category>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Category> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Category>() {
              public Category findValueByNumber(int number) {
                return Category.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.jcodec.samples.mp4.Test2Proto.Tag.getDescriptor().getEnumTypes().get(0);
      }

      private static final Category[] VALUES = values();

      public static Category valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Category(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.jcodec.samples.mp4.Tag.Category)
    }

    private int bitField0_;
    public static final int CATEGORY_FIELD_NUMBER = 1;
    private int category_;
    /**
     * <pre>
     * The category of the audio recording, such as speech, music, etc.
     * This is required since v1.
     * </pre>
     *
     * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
     * @return Whether the category field is set.
     */
    public boolean hasCategory() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The category of the audio recording, such as speech, music, etc.
     * This is required since v1.
     * </pre>
     *
     * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
     * @return The category.
     */
    public org.jcodec.samples.mp4.Test2Proto.Tag.Category getCategory() {
      @SuppressWarnings("deprecation")
      org.jcodec.samples.mp4.Test2Proto.Tag.Category result = org.jcodec.samples.mp4.Test2Proto.Tag.Category.valueOf(category_);
      return result == null ? org.jcodec.samples.mp4.Test2Proto.Tag.Category.UNKNOWN : result;
    }

    public static final int ONSET_MILLI_FIELD_NUMBER = 2;
    private long onsetMilli_;
    /**
     * <pre>
     * The onset of the audio tag in the audio recording.
     * This is required since v1.
     * </pre>
     *
     * <code>optional int64 onset_milli = 2;</code>
     * @return Whether the onsetMilli field is set.
     */
    public boolean hasOnsetMilli() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The onset of the audio tag in the audio recording.
     * This is required since v1.
     * </pre>
     *
     * <code>optional int64 onset_milli = 2;</code>
     * @return The onsetMilli.
     */
    public long getOnsetMilli() {
      return onsetMilli_;
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private double score_;
    /**
     * <pre>
     * The score for the accuracy of the audio tag.
     * This is required since v1.
     * </pre>
     *
     * <code>optional double score = 3;</code>
     * @return Whether the score field is set.
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The score for the accuracy of the audio tag.
     * This is required since v1.
     * </pre>
     *
     * <code>optional double score = 3;</code>
     * @return The score.
     */
    public double getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, category_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, onsetMilli_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, score_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, category_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, onsetMilli_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.jcodec.samples.mp4.Test2Proto.Tag)) {
        return super.equals(obj);
      }
      org.jcodec.samples.mp4.Test2Proto.Tag other = (org.jcodec.samples.mp4.Test2Proto.Tag) obj;

      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (category_ != other.category_) return false;
      }
      if (hasOnsetMilli() != other.hasOnsetMilli()) return false;
      if (hasOnsetMilli()) {
        if (getOnsetMilli()
            != other.getOnsetMilli()) return false;
      }
      if (hasScore() != other.hasScore()) return false;
      if (hasScore()) {
        if (java.lang.Double.doubleToLongBits(getScore())
            != java.lang.Double.doubleToLongBits(
                other.getScore())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + category_;
      }
      if (hasOnsetMilli()) {
        hash = (37 * hash) + ONSET_MILLI_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOnsetMilli());
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScore()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test2Proto.Tag parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.jcodec.samples.mp4.Test2Proto.Tag prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jcodec.samples.mp4.Tag}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jcodec.samples.mp4.Tag)
        org.jcodec.samples.mp4.Test2Proto.TagOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jcodec.samples.mp4.Test2Proto.internal_static_org_jcodec_samples_mp4_Tag_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jcodec.samples.mp4.Test2Proto.internal_static_org_jcodec_samples_mp4_Tag_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jcodec.samples.mp4.Test2Proto.Tag.class, org.jcodec.samples.mp4.Test2Proto.Tag.Builder.class);
      }

      // Construct using org.jcodec.samples.mp4.Test2Proto.Tag.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        category_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        onsetMilli_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jcodec.samples.mp4.Test2Proto.internal_static_org_jcodec_samples_mp4_Tag_descriptor;
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test2Proto.Tag getDefaultInstanceForType() {
        return org.jcodec.samples.mp4.Test2Proto.Tag.getDefaultInstance();
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test2Proto.Tag build() {
        org.jcodec.samples.mp4.Test2Proto.Tag result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test2Proto.Tag buildPartial() {
        org.jcodec.samples.mp4.Test2Proto.Tag result = new org.jcodec.samples.mp4.Test2Proto.Tag(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.category_ = category_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.onsetMilli_ = onsetMilli_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.score_ = score_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jcodec.samples.mp4.Test2Proto.Tag) {
          return mergeFrom((org.jcodec.samples.mp4.Test2Proto.Tag)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jcodec.samples.mp4.Test2Proto.Tag other) {
        if (other == org.jcodec.samples.mp4.Test2Proto.Tag.getDefaultInstance()) return this;
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (other.hasOnsetMilli()) {
          setOnsetMilli(other.getOnsetMilli());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jcodec.samples.mp4.Test2Proto.Tag parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jcodec.samples.mp4.Test2Proto.Tag) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int category_ = 0;
      /**
       * <pre>
       * The category of the audio recording, such as speech, music, etc.
       * This is required since v1.
       * </pre>
       *
       * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The category of the audio recording, such as speech, music, etc.
       * This is required since v1.
       * </pre>
       *
       * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
       * @return The category.
       */
      public org.jcodec.samples.mp4.Test2Proto.Tag.Category getCategory() {
        @SuppressWarnings("deprecation")
        org.jcodec.samples.mp4.Test2Proto.Tag.Category result = org.jcodec.samples.mp4.Test2Proto.Tag.Category.valueOf(category_);
        return result == null ? org.jcodec.samples.mp4.Test2Proto.Tag.Category.UNKNOWN : result;
      }
      /**
       * <pre>
       * The category of the audio recording, such as speech, music, etc.
       * This is required since v1.
       * </pre>
       *
       * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
       * @param value The category to set.
       * @return This builder for chaining.
       */
      public Builder setCategory(org.jcodec.samples.mp4.Test2Proto.Tag.Category value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        category_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The category of the audio recording, such as speech, music, etc.
       * This is required since v1.
       * </pre>
       *
       * <code>optional .org.jcodec.samples.mp4.Tag.Category category = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCategory() {
        bitField0_ = (bitField0_ & ~0x00000001);
        category_ = 0;
        onChanged();
        return this;
      }

      private long onsetMilli_ ;
      /**
       * <pre>
       * The onset of the audio tag in the audio recording.
       * This is required since v1.
       * </pre>
       *
       * <code>optional int64 onset_milli = 2;</code>
       * @return Whether the onsetMilli field is set.
       */
      public boolean hasOnsetMilli() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The onset of the audio tag in the audio recording.
       * This is required since v1.
       * </pre>
       *
       * <code>optional int64 onset_milli = 2;</code>
       * @return The onsetMilli.
       */
      public long getOnsetMilli() {
        return onsetMilli_;
      }
      /**
       * <pre>
       * The onset of the audio tag in the audio recording.
       * This is required since v1.
       * </pre>
       *
       * <code>optional int64 onset_milli = 2;</code>
       * @param value The onsetMilli to set.
       * @return This builder for chaining.
       */
      public Builder setOnsetMilli(long value) {
        bitField0_ |= 0x00000002;
        onsetMilli_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The onset of the audio tag in the audio recording.
       * This is required since v1.
       * </pre>
       *
       * <code>optional int64 onset_milli = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnsetMilli() {
        bitField0_ = (bitField0_ & ~0x00000002);
        onsetMilli_ = 0L;
        onChanged();
        return this;
      }

      private double score_ ;
      /**
       * <pre>
       * The score for the accuracy of the audio tag.
       * This is required since v1.
       * </pre>
       *
       * <code>optional double score = 3;</code>
       * @return Whether the score field is set.
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The score for the accuracy of the audio tag.
       * This is required since v1.
       * </pre>
       *
       * <code>optional double score = 3;</code>
       * @return The score.
       */
      public double getScore() {
        return score_;
      }
      /**
       * <pre>
       * The score for the accuracy of the audio tag.
       * This is required since v1.
       * </pre>
       *
       * <code>optional double score = 3;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(double value) {
        bitField0_ |= 0x00000004;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The score for the accuracy of the audio tag.
       * This is required since v1.
       * </pre>
       *
       * <code>optional double score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.jcodec.samples.mp4.Tag)
    }

    // @@protoc_insertion_point(class_scope:org.jcodec.samples.mp4.Tag)
    private static final org.jcodec.samples.mp4.Test2Proto.Tag DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.jcodec.samples.mp4.Test2Proto.Tag();
    }

    public static org.jcodec.samples.mp4.Test2Proto.Tag getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Tag>
        PARSER = new com.google.protobuf.AbstractParser<Tag>() {
      @java.lang.Override
      public Tag parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tag(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Tag> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tag> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.jcodec.samples.mp4.Test2Proto.Tag getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jcodec_samples_mp4_Tag_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_jcodec_samples_mp4_Tag_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014proto2.proto\022\026org.jcodec.samples.mp4\"\220" +
      "\002\n\003Tag\0226\n\010category\030\001 \001(\0162$.org.jcodec.sa" +
      "mples.mp4.Tag.Category\022\023\n\013onset_milli\030\002 " +
      "\001(\003\022\r\n\005score\030\003 \001(\001\"\254\001\n\010Category\022\013\n\007UNKNO" +
      "WN\020\000\022\n\n\006SPEECH\020\001\022\t\n\005MUSIC\020\002\022\r\n\tWHISTLING" +
      "\020\003\022\014\n\010APPLAUSE\020\004\022\t\n\005KNOCK\020\005\022\010\n\004BIRD\020\006\022\007\n" +
      "\003CAT\020\007\022\007\n\003DOG\020\010\022\013\n\007ROOSTER\020\t\022\014\n\010LAUGHTER" +
      "\020\n\022\r\n\tTELEPHONE\020\013\022\016\n\nDIDGERIDOO\020\014B\014B\nTes" +
      "t2Proto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_jcodec_samples_mp4_Tag_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_jcodec_samples_mp4_Tag_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_jcodec_samples_mp4_Tag_descriptor,
        new java.lang.String[] { "Category", "OnsetMilli", "Score", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
