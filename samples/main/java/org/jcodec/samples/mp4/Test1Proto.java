// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto1.proto

package org.jcodec.samples.mp4;

public final class Test1Proto {
  private Test1Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WordsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jcodec.samples.mp4.Words)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word> 
        getWordsList();
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    org.jcodec.samples.mp4.Test1Proto.Words.Word getWords(int index);
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    int getWordsCount();
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    java.util.List<? extends org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder> 
        getWordsOrBuilderList();
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder getWordsOrBuilder(
        int index);

    /**
     * <pre>
     * A confidence score for the accuracy of the text. Range is (0,1).
     * </pre>
     *
     * <code>optional float confidence = 2;</code>
     * @return Whether the confidence field is set.
     */
    boolean hasConfidence();
    /**
     * <pre>
     * A confidence score for the accuracy of the text. Range is (0,1).
     * </pre>
     *
     * <code>optional float confidence = 2;</code>
     * @return The confidence.
     */
    float getConfidence();
  }
  /**
   * <pre>
   * An Utterance is a collection of words representing a single block of
   * transcribed speech. The block varies in size based on the Automatic Speech
   * Recognizer's ability to detect a pause in the orator's speech that demarks
   * the end of an utterance.
   * </pre>
   *
   * Protobuf type {@code org.jcodec.samples.mp4.Words}
   */
  public  static final class Words extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.jcodec.samples.mp4.Words)
      WordsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Words.newBuilder() to construct.
    private Words(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Words() {
      words_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Words();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Words(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                words_ = new java.util.ArrayList<org.jcodec.samples.mp4.Test1Proto.Words.Word>();
                mutable_bitField0_ |= 0x00000001;
              }
              words_.add(
                  input.readMessage(org.jcodec.samples.mp4.Test1Proto.Words.Word.PARSER, extensionRegistry));
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              confidence_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          words_ = java.util.Collections.unmodifiableList(words_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jcodec.samples.mp4.Test1Proto.Words.class, org.jcodec.samples.mp4.Test1Proto.Words.Builder.class);
    }

    public interface WordOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.jcodec.samples.mp4.Words.Word)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return Whether the rawString field is set.
       */
      boolean hasRawString();
      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return The rawString.
       */
      java.lang.String getRawString();
      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return The bytes for rawString.
       */
      com.google.protobuf.ByteString
          getRawStringBytes();

      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return Whether the formattedString field is set.
       */
      boolean hasFormattedString();
      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return The formattedString.
       */
      java.lang.String getFormattedString();
      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return The bytes for formattedString.
       */
      com.google.protobuf.ByteString
          getFormattedStringBytes();

      /**
       * <pre>
       * The onset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 onset_milli = 3;</code>
       * @return Whether the onsetMilli field is set.
       */
      boolean hasOnsetMilli();
      /**
       * <pre>
       * The onset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 onset_milli = 3;</code>
       * @return The onsetMilli.
       */
      long getOnsetMilli();

      /**
       * <pre>
       * The offset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 offset_milli = 4;</code>
       * @return Whether the offsetMilli field is set.
       */
      boolean hasOffsetMilli();
      /**
       * <pre>
       * The offset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 offset_milli = 4;</code>
       * @return The offsetMilli.
       */
      long getOffsetMilli();
    }
    /**
     * <pre>
     * One Word exists for each spoken word in the text.
     * </pre>
     *
     * Protobuf type {@code org.jcodec.samples.mp4.Words.Word}
     */
    public  static final class Word extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.jcodec.samples.mp4.Words.Word)
        WordOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Word.newBuilder() to construct.
      private Word(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Word() {
        rawString_ = "";
        formattedString_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Word();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Word(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                rawString_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                formattedString_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                onsetMilli_ = input.readInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                offsetMilli_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_Word_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_Word_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jcodec.samples.mp4.Test1Proto.Words.Word.class, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder.class);
      }

      private int bitField0_;
      public static final int RAW_STRING_FIELD_NUMBER = 1;
      private volatile java.lang.Object rawString_;
      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return Whether the rawString field is set.
       */
      public boolean hasRawString() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return The rawString.
       */
      public java.lang.String getRawString() {
        java.lang.Object ref = rawString_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rawString_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * A single word from the text. Not including punctuation.
       * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
       * </pre>
       *
       * <code>optional string raw_string = 1;</code>
       * @return The bytes for rawString.
       */
      public com.google.protobuf.ByteString
          getRawStringBytes() {
        java.lang.Object ref = rawString_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rawString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FORMATTED_STRING_FIELD_NUMBER = 2;
      private volatile java.lang.Object formattedString_;
      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return Whether the formattedString field is set.
       */
      public boolean hasFormattedString() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return The formattedString.
       */
      public java.lang.String getFormattedString() {
        java.lang.Object ref = formattedString_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formattedString_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * The above word with punctuation added. Not present if no punctuation
       * added.
       * </pre>
       *
       * <code>optional string formatted_string = 2;</code>
       * @return The bytes for formattedString.
       */
      public com.google.protobuf.ByteString
          getFormattedStringBytes() {
        java.lang.Object ref = formattedString_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formattedString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ONSET_MILLI_FIELD_NUMBER = 3;
      private long onsetMilli_;
      /**
       * <pre>
       * The onset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 onset_milli = 3;</code>
       * @return Whether the onsetMilli field is set.
       */
      public boolean hasOnsetMilli() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The onset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 onset_milli = 3;</code>
       * @return The onsetMilli.
       */
      public long getOnsetMilli() {
        return onsetMilli_;
      }

      public static final int OFFSET_MILLI_FIELD_NUMBER = 4;
      private long offsetMilli_;
      /**
       * <pre>
       * The offset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 offset_milli = 4;</code>
       * @return Whether the offsetMilli field is set.
       */
      public boolean hasOffsetMilli() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The offset of the spoken word in the audio recording.
       * </pre>
       *
       * <code>optional int64 offset_milli = 4;</code>
       * @return The offsetMilli.
       */
      public long getOffsetMilli() {
        return offsetMilli_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rawString_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, formattedString_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt64(3, onsetMilli_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt64(4, offsetMilli_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rawString_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, formattedString_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, onsetMilli_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, offsetMilli_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.jcodec.samples.mp4.Test1Proto.Words.Word)) {
          return super.equals(obj);
        }
        org.jcodec.samples.mp4.Test1Proto.Words.Word other = (org.jcodec.samples.mp4.Test1Proto.Words.Word) obj;

        if (hasRawString() != other.hasRawString()) return false;
        if (hasRawString()) {
          if (!getRawString()
              .equals(other.getRawString())) return false;
        }
        if (hasFormattedString() != other.hasFormattedString()) return false;
        if (hasFormattedString()) {
          if (!getFormattedString()
              .equals(other.getFormattedString())) return false;
        }
        if (hasOnsetMilli() != other.hasOnsetMilli()) return false;
        if (hasOnsetMilli()) {
          if (getOnsetMilli()
              != other.getOnsetMilli()) return false;
        }
        if (hasOffsetMilli() != other.hasOffsetMilli()) return false;
        if (hasOffsetMilli()) {
          if (getOffsetMilli()
              != other.getOffsetMilli()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRawString()) {
          hash = (37 * hash) + RAW_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getRawString().hashCode();
        }
        if (hasFormattedString()) {
          hash = (37 * hash) + FORMATTED_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getFormattedString().hashCode();
        }
        if (hasOnsetMilli()) {
          hash = (37 * hash) + ONSET_MILLI_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getOnsetMilli());
        }
        if (hasOffsetMilli()) {
          hash = (37 * hash) + OFFSET_MILLI_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getOffsetMilli());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.jcodec.samples.mp4.Test1Proto.Words.Word parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.jcodec.samples.mp4.Test1Proto.Words.Word prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * One Word exists for each spoken word in the text.
       * </pre>
       *
       * Protobuf type {@code org.jcodec.samples.mp4.Words.Word}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.jcodec.samples.mp4.Words.Word)
          org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_Word_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_Word_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.jcodec.samples.mp4.Test1Proto.Words.Word.class, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder.class);
        }

        // Construct using org.jcodec.samples.mp4.Test1Proto.Words.Word.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rawString_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          formattedString_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          onsetMilli_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          offsetMilli_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_Word_descriptor;
        }

        @java.lang.Override
        public org.jcodec.samples.mp4.Test1Proto.Words.Word getDefaultInstanceForType() {
          return org.jcodec.samples.mp4.Test1Proto.Words.Word.getDefaultInstance();
        }

        @java.lang.Override
        public org.jcodec.samples.mp4.Test1Proto.Words.Word build() {
          org.jcodec.samples.mp4.Test1Proto.Words.Word result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.jcodec.samples.mp4.Test1Proto.Words.Word buildPartial() {
          org.jcodec.samples.mp4.Test1Proto.Words.Word result = new org.jcodec.samples.mp4.Test1Proto.Words.Word(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.rawString_ = rawString_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.formattedString_ = formattedString_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.onsetMilli_ = onsetMilli_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.offsetMilli_ = offsetMilli_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.jcodec.samples.mp4.Test1Proto.Words.Word) {
            return mergeFrom((org.jcodec.samples.mp4.Test1Proto.Words.Word)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.jcodec.samples.mp4.Test1Proto.Words.Word other) {
          if (other == org.jcodec.samples.mp4.Test1Proto.Words.Word.getDefaultInstance()) return this;
          if (other.hasRawString()) {
            bitField0_ |= 0x00000001;
            rawString_ = other.rawString_;
            onChanged();
          }
          if (other.hasFormattedString()) {
            bitField0_ |= 0x00000002;
            formattedString_ = other.formattedString_;
            onChanged();
          }
          if (other.hasOnsetMilli()) {
            setOnsetMilli(other.getOnsetMilli());
          }
          if (other.hasOffsetMilli()) {
            setOffsetMilli(other.getOffsetMilli());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.jcodec.samples.mp4.Test1Proto.Words.Word parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.jcodec.samples.mp4.Test1Proto.Words.Word) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object rawString_ = "";
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @return Whether the rawString field is set.
         */
        public boolean hasRawString() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @return The rawString.
         */
        public java.lang.String getRawString() {
          java.lang.Object ref = rawString_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              rawString_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @return The bytes for rawString.
         */
        public com.google.protobuf.ByteString
            getRawStringBytes() {
          java.lang.Object ref = rawString_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            rawString_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @param value The rawString to set.
         * @return This builder for chaining.
         */
        public Builder setRawString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          rawString_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRawString() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rawString_ = getDefaultInstance().getRawString();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A single word from the text. Not including punctuation.
         * e.g. "Now", "I", "am", "become", "Death", "the", "destroyer"...
         * </pre>
         *
         * <code>optional string raw_string = 1;</code>
         * @param value The bytes for rawString to set.
         * @return This builder for chaining.
         */
        public Builder setRawStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          rawString_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object formattedString_ = "";
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @return Whether the formattedString field is set.
         */
        public boolean hasFormattedString() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @return The formattedString.
         */
        public java.lang.String getFormattedString() {
          java.lang.Object ref = formattedString_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              formattedString_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @return The bytes for formattedString.
         */
        public com.google.protobuf.ByteString
            getFormattedStringBytes() {
          java.lang.Object ref = formattedString_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            formattedString_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @param value The formattedString to set.
         * @return This builder for chaining.
         */
        public Builder setFormattedString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          formattedString_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFormattedString() {
          bitField0_ = (bitField0_ & ~0x00000002);
          formattedString_ = getDefaultInstance().getFormattedString();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The above word with punctuation added. Not present if no punctuation
         * added.
         * </pre>
         *
         * <code>optional string formatted_string = 2;</code>
         * @param value The bytes for formattedString to set.
         * @return This builder for chaining.
         */
        public Builder setFormattedStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          formattedString_ = value;
          onChanged();
          return this;
        }

        private long onsetMilli_ ;
        /**
         * <pre>
         * The onset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 onset_milli = 3;</code>
         * @return Whether the onsetMilli field is set.
         */
        public boolean hasOnsetMilli() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The onset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 onset_milli = 3;</code>
         * @return The onsetMilli.
         */
        public long getOnsetMilli() {
          return onsetMilli_;
        }
        /**
         * <pre>
         * The onset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 onset_milli = 3;</code>
         * @param value The onsetMilli to set.
         * @return This builder for chaining.
         */
        public Builder setOnsetMilli(long value) {
          bitField0_ |= 0x00000004;
          onsetMilli_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The onset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 onset_milli = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearOnsetMilli() {
          bitField0_ = (bitField0_ & ~0x00000004);
          onsetMilli_ = 0L;
          onChanged();
          return this;
        }

        private long offsetMilli_ ;
        /**
         * <pre>
         * The offset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 offset_milli = 4;</code>
         * @return Whether the offsetMilli field is set.
         */
        public boolean hasOffsetMilli() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * The offset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 offset_milli = 4;</code>
         * @return The offsetMilli.
         */
        public long getOffsetMilli() {
          return offsetMilli_;
        }
        /**
         * <pre>
         * The offset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 offset_milli = 4;</code>
         * @param value The offsetMilli to set.
         * @return This builder for chaining.
         */
        public Builder setOffsetMilli(long value) {
          bitField0_ |= 0x00000008;
          offsetMilli_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The offset of the spoken word in the audio recording.
         * </pre>
         *
         * <code>optional int64 offset_milli = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearOffsetMilli() {
          bitField0_ = (bitField0_ & ~0x00000008);
          offsetMilli_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.jcodec.samples.mp4.Words.Word)
      }

      // @@protoc_insertion_point(class_scope:org.jcodec.samples.mp4.Words.Word)
      private static final org.jcodec.samples.mp4.Test1Proto.Words.Word DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.jcodec.samples.mp4.Test1Proto.Words.Word();
      }

      public static org.jcodec.samples.mp4.Test1Proto.Words.Word getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Word>
          PARSER = new com.google.protobuf.AbstractParser<Word>() {
        @java.lang.Override
        public Word parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Word(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Word> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Word> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test1Proto.Words.Word getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int WORDS_FIELD_NUMBER = 1;
    private java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word> words_;
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    public java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word> getWordsList() {
      return words_;
    }
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    public java.util.List<? extends org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder> 
        getWordsOrBuilderList() {
      return words_;
    }
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    public int getWordsCount() {
      return words_.size();
    }
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    public org.jcodec.samples.mp4.Test1Proto.Words.Word getWords(int index) {
      return words_.get(index);
    }
    /**
     * <pre>
     * Associates time offsets with each spoken word in the text. Includes
     * punctuation if it exists.
     * </pre>
     *
     * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
     */
    public org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder getWordsOrBuilder(
        int index) {
      return words_.get(index);
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 2;
    private float confidence_;
    /**
     * <pre>
     * A confidence score for the accuracy of the text. Range is (0,1).
     * </pre>
     *
     * <code>optional float confidence = 2;</code>
     * @return Whether the confidence field is set.
     */
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A confidence score for the accuracy of the text. Range is (0,1).
     * </pre>
     *
     * <code>optional float confidence = 2;</code>
     * @return The confidence.
     */
    public float getConfidence() {
      return confidence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < words_.size(); i++) {
        output.writeMessage(1, words_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, confidence_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < words_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, words_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, confidence_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.jcodec.samples.mp4.Test1Proto.Words)) {
        return super.equals(obj);
      }
      org.jcodec.samples.mp4.Test1Proto.Words other = (org.jcodec.samples.mp4.Test1Proto.Words) obj;

      if (!getWordsList()
          .equals(other.getWordsList())) return false;
      if (hasConfidence() != other.hasConfidence()) return false;
      if (hasConfidence()) {
        if (java.lang.Float.floatToIntBits(getConfidence())
            != java.lang.Float.floatToIntBits(
                other.getConfidence())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWordsCount() > 0) {
        hash = (37 * hash) + WORDS_FIELD_NUMBER;
        hash = (53 * hash) + getWordsList().hashCode();
      }
      if (hasConfidence()) {
        hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getConfidence());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.jcodec.samples.mp4.Test1Proto.Words parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.jcodec.samples.mp4.Test1Proto.Words prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An Utterance is a collection of words representing a single block of
     * transcribed speech. The block varies in size based on the Automatic Speech
     * Recognizer's ability to detect a pause in the orator's speech that demarks
     * the end of an utterance.
     * </pre>
     *
     * Protobuf type {@code org.jcodec.samples.mp4.Words}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jcodec.samples.mp4.Words)
        org.jcodec.samples.mp4.Test1Proto.WordsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jcodec.samples.mp4.Test1Proto.Words.class, org.jcodec.samples.mp4.Test1Proto.Words.Builder.class);
      }

      // Construct using org.jcodec.samples.mp4.Test1Proto.Words.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWordsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (wordsBuilder_ == null) {
          words_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          wordsBuilder_.clear();
        }
        confidence_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jcodec.samples.mp4.Test1Proto.internal_static_org_jcodec_samples_mp4_Words_descriptor;
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test1Proto.Words getDefaultInstanceForType() {
        return org.jcodec.samples.mp4.Test1Proto.Words.getDefaultInstance();
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test1Proto.Words build() {
        org.jcodec.samples.mp4.Test1Proto.Words result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.jcodec.samples.mp4.Test1Proto.Words buildPartial() {
        org.jcodec.samples.mp4.Test1Proto.Words result = new org.jcodec.samples.mp4.Test1Proto.Words(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (wordsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            words_ = java.util.Collections.unmodifiableList(words_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.words_ = words_;
        } else {
          result.words_ = wordsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.confidence_ = confidence_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jcodec.samples.mp4.Test1Proto.Words) {
          return mergeFrom((org.jcodec.samples.mp4.Test1Proto.Words)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jcodec.samples.mp4.Test1Proto.Words other) {
        if (other == org.jcodec.samples.mp4.Test1Proto.Words.getDefaultInstance()) return this;
        if (wordsBuilder_ == null) {
          if (!other.words_.isEmpty()) {
            if (words_.isEmpty()) {
              words_ = other.words_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWordsIsMutable();
              words_.addAll(other.words_);
            }
            onChanged();
          }
        } else {
          if (!other.words_.isEmpty()) {
            if (wordsBuilder_.isEmpty()) {
              wordsBuilder_.dispose();
              wordsBuilder_ = null;
              words_ = other.words_;
              bitField0_ = (bitField0_ & ~0x00000001);
              wordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWordsFieldBuilder() : null;
            } else {
              wordsBuilder_.addAllMessages(other.words_);
            }
          }
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jcodec.samples.mp4.Test1Proto.Words parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jcodec.samples.mp4.Test1Proto.Words) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word> words_ =
        java.util.Collections.emptyList();
      private void ensureWordsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          words_ = new java.util.ArrayList<org.jcodec.samples.mp4.Test1Proto.Words.Word>(words_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.jcodec.samples.mp4.Test1Proto.Words.Word, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder, org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder> wordsBuilder_;

      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word> getWordsList() {
        if (wordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(words_);
        } else {
          return wordsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public int getWordsCount() {
        if (wordsBuilder_ == null) {
          return words_.size();
        } else {
          return wordsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public org.jcodec.samples.mp4.Test1Proto.Words.Word getWords(int index) {
        if (wordsBuilder_ == null) {
          return words_.get(index);
        } else {
          return wordsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder setWords(
          int index, org.jcodec.samples.mp4.Test1Proto.Words.Word value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.set(index, value);
          onChanged();
        } else {
          wordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder setWords(
          int index, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.set(index, builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder addWords(org.jcodec.samples.mp4.Test1Proto.Words.Word value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.add(value);
          onChanged();
        } else {
          wordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder addWords(
          int index, org.jcodec.samples.mp4.Test1Proto.Words.Word value) {
        if (wordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWordsIsMutable();
          words_.add(index, value);
          onChanged();
        } else {
          wordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder addWords(
          org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.add(builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder addWords(
          int index, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder builderForValue) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.add(index, builderForValue.build());
          onChanged();
        } else {
          wordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder addAllWords(
          java.lang.Iterable<? extends org.jcodec.samples.mp4.Test1Proto.Words.Word> values) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, words_);
          onChanged();
        } else {
          wordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder clearWords() {
        if (wordsBuilder_ == null) {
          words_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          wordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public Builder removeWords(int index) {
        if (wordsBuilder_ == null) {
          ensureWordsIsMutable();
          words_.remove(index);
          onChanged();
        } else {
          wordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder getWordsBuilder(
          int index) {
        return getWordsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder getWordsOrBuilder(
          int index) {
        if (wordsBuilder_ == null) {
          return words_.get(index);  } else {
          return wordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public java.util.List<? extends org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder> 
           getWordsOrBuilderList() {
        if (wordsBuilder_ != null) {
          return wordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(words_);
        }
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder addWordsBuilder() {
        return getWordsFieldBuilder().addBuilder(
            org.jcodec.samples.mp4.Test1Proto.Words.Word.getDefaultInstance());
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder addWordsBuilder(
          int index) {
        return getWordsFieldBuilder().addBuilder(
            index, org.jcodec.samples.mp4.Test1Proto.Words.Word.getDefaultInstance());
      }
      /**
       * <pre>
       * Associates time offsets with each spoken word in the text. Includes
       * punctuation if it exists.
       * </pre>
       *
       * <code>repeated .org.jcodec.samples.mp4.Words.Word words = 1;</code>
       */
      public java.util.List<org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder> 
           getWordsBuilderList() {
        return getWordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.jcodec.samples.mp4.Test1Proto.Words.Word, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder, org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder> 
          getWordsFieldBuilder() {
        if (wordsBuilder_ == null) {
          wordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.jcodec.samples.mp4.Test1Proto.Words.Word, org.jcodec.samples.mp4.Test1Proto.Words.Word.Builder, org.jcodec.samples.mp4.Test1Proto.Words.WordOrBuilder>(
                  words_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          words_ = null;
        }
        return wordsBuilder_;
      }

      private float confidence_ ;
      /**
       * <pre>
       * A confidence score for the accuracy of the text. Range is (0,1).
       * </pre>
       *
       * <code>optional float confidence = 2;</code>
       * @return Whether the confidence field is set.
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * A confidence score for the accuracy of the text. Range is (0,1).
       * </pre>
       *
       * <code>optional float confidence = 2;</code>
       * @return The confidence.
       */
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       * A confidence score for the accuracy of the text. Range is (0,1).
       * </pre>
       *
       * <code>optional float confidence = 2;</code>
       * @param value The confidence to set.
       * @return This builder for chaining.
       */
      public Builder setConfidence(float value) {
        bitField0_ |= 0x00000002;
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A confidence score for the accuracy of the text. Range is (0,1).
       * </pre>
       *
       * <code>optional float confidence = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000002);
        confidence_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.jcodec.samples.mp4.Words)
    }

    // @@protoc_insertion_point(class_scope:org.jcodec.samples.mp4.Words)
    private static final org.jcodec.samples.mp4.Test1Proto.Words DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.jcodec.samples.mp4.Test1Proto.Words();
    }

    public static org.jcodec.samples.mp4.Test1Proto.Words getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Words>
        PARSER = new com.google.protobuf.AbstractParser<Words>() {
      @java.lang.Override
      public Words parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Words(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Words> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Words> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.jcodec.samples.mp4.Test1Proto.Words getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jcodec_samples_mp4_Words_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_jcodec_samples_mp4_Words_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jcodec_samples_mp4_Words_Word_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_jcodec_samples_mp4_Words_Word_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014proto1.proto\022\026org.jcodec.samples.mp4\"\257" +
      "\001\n\005Words\0221\n\005words\030\001 \003(\0132\".org.jcodec.sam" +
      "ples.mp4.Words.Word\022\022\n\nconfidence\030\002 \001(\002\032" +
      "_\n\004Word\022\022\n\nraw_string\030\001 \001(\t\022\030\n\020formatted" +
      "_string\030\002 \001(\t\022\023\n\013onset_milli\030\003 \001(\003\022\024\n\014of" +
      "fset_milli\030\004 \001(\003B\014B\nTest1Proto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_jcodec_samples_mp4_Words_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_jcodec_samples_mp4_Words_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_jcodec_samples_mp4_Words_descriptor,
        new java.lang.String[] { "Words", "Confidence", });
    internal_static_org_jcodec_samples_mp4_Words_Word_descriptor =
      internal_static_org_jcodec_samples_mp4_Words_descriptor.getNestedTypes().get(0);
    internal_static_org_jcodec_samples_mp4_Words_Word_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_jcodec_samples_mp4_Words_Word_descriptor,
        new java.lang.String[] { "RawString", "FormattedString", "OnsetMilli", "OffsetMilli", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
